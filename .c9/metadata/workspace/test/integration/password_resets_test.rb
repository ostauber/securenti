{"filter":false,"title":"password_resets_test.rb","tooltip":"/test/integration/password_resets_test.rb","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":7,"column":0}},"nl":"\n","lines":["require 'test_helper'","","class PasswordResetsTest < ActionDispatch::IntegrationTest","  # test \"the truth\" do","  #   assert true","  # end","end"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":21}},"text":"require 'test_helper'"},{"action":"insertText","range":{"start":{"row":0,"column":21},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":52,"column":0}},"lines":["","class PasswordResetsTest < ActionDispatch::IntegrationTest","","  def setup","    ActionMailer::Base.deliveries.clear","    @user = users(:michael)","  end","","  test \"password_reset\" do","    get new_password_reset_path","    # Invalid submission","    post password_resets_path, password_reset: { email: \"\" }","    assert_template 'password_resets/new'","    # Valid submission","    post password_resets_path, password_reset: { email: @user.email }","    assert_redirected_to root_url","    # Get the user from the create action.","    user = assigns(:user)","    follow_redirect!","    assert_select 'div.alert'","    assert_equal 1, ActionMailer::Base.deliveries.size","    # Wrong email","    get edit_password_reset_path(user.reset_token, email: 'wrong')","    assert_redirected_to root_url","    # Right email, wrong token","    get edit_password_reset_path('wrong token', email: user.email)","    assert_redirected_to root_url","    # Right email, right token","    get edit_password_reset_path(user.reset_token, email: user.email)","    assert_template 'password_resets/edit'","    assert_select \"input#email[name=email][type=hidden][value=?]\", user.email","    # Invalid password & confirmation","    patch password_reset_path(user.reset_token),","          email: user.email,","          user:  { password:              \"foobaz\",","                   password_confirmation: \"barquux\" }","    assert_select 'div#error_explanation'","    # Blank password & confirmation","    patch password_reset_path(user.reset_token),","          email: user.email,","          user:  { password:              \"\",","                   password_confirmation: \"\" }","    assert_not_nil flash.now","    assert_template 'password_resets/edit'","    # Valid password & confirmation","    patch_via_redirect password_reset_path(user.reset_token),","                       email: user.email,","                       user: { password:              \"foobaz\",","                               password_confirmation: \"foobaz\" }","    assert_template 'users/show'","  end"]},{"action":"insertText","range":{"start":{"row":52,"column":0},"end":{"row":52,"column":3}},"text":"end"}]}]]},"ace":{"folds":[],"scrolltop":237,"scrollleft":0,"selection":{"start":{"row":33,"column":20},"end":{"row":33,"column":20},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":3,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1415333663020,"hash":"ee5cb4bd776ab6abb62fc7fef43317f956bb81fe"}