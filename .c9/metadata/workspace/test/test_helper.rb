{"filter":false,"title":"test_helper.rb","tooltip":"/test/test_helper.rb","undoManager":{"mark":4,"position":4,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":3}},"text":"end"},{"action":"removeLines","range":{"start":{"row":8,"column":0},"end":{"row":15,"column":0}},"nl":"\n","lines":["class ActiveSupport::TestCase","  ActiveRecord::Migration.check_pending!","  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical","  # order.","  fixtures :all","","  # Add more helper methods to be used by all tests here..."]},{"action":"insertText","range":{"start":{"row":8,"column":0},"end":{"row":8,"column":29}},"text":"class ActiveSupport::TestCase"},{"action":"insertText","range":{"start":{"row":8,"column":29},"end":{"row":9,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":9,"column":0},"end":{"row":15,"column":0}},"lines":["  fixtures :all","","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end"]},{"action":"insertText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":3}},"text":"end"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":15,"column":0},"end":{"row":15,"column":3}},"text":"end"},{"action":"removeLines","range":{"start":{"row":8,"column":0},"end":{"row":15,"column":0}},"nl":"\n","lines":["class ActiveSupport::TestCase","  fixtures :all","","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end"]},{"action":"insertText","range":{"start":{"row":8,"column":0},"end":{"row":8,"column":29}},"text":"class ActiveSupport::TestCase"},{"action":"insertText","range":{"start":{"row":8,"column":29},"end":{"row":9,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":9,"column":0},"end":{"row":35,"column":0}},"lines":["  fixtures :all","","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end","","  # Logs in a test user.","  def log_in_as(user, options = {})","    password    = options[:password]    || 'password'","    remember_me = options[:remember_me] || '1'","    if integration_test?","      post login_path, session: { email:       user.email,","                                  password:    password,","                                  remember_me: remember_me }","    else","      session[:user_id] = user.id","    end","  end","","  private","","    # Returns true inside an integration test.","    def integration_test?","      defined?(post_via_redirect)","    end"]},{"action":"insertText","range":{"start":{"row":35,"column":0},"end":{"row":35,"column":3}},"text":"end"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":5,"column":0},"end":{"row":5,"column":1}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":6,"column":0},"end":{"row":6,"column":1}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":35,"column":0},"end":{"row":35,"column":3}},"text":"end"},{"action":"removeLines","range":{"start":{"row":8,"column":0},"end":{"row":35,"column":0}},"nl":"\n","lines":["class ActiveSupport::TestCase","  fixtures :all","","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end","","  # Logs in a test user.","  def log_in_as(user, options = {})","    password    = options[:password]    || 'password'","    remember_me = options[:remember_me] || '1'","    if integration_test?","      post login_path, session: { email:       user.email,","                                  password:    password,","                                  remember_me: remember_me }","    else","      session[:user_id] = user.id","    end","  end","","  private","","    # Returns true inside an integration test.","    def integration_test?","      defined?(post_via_redirect)","    end"]},{"action":"insertText","range":{"start":{"row":8,"column":0},"end":{"row":8,"column":29}},"text":"class ActiveSupport::TestCase"},{"action":"insertText","range":{"start":{"row":8,"column":29},"end":{"row":9,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":9,"column":0},"end":{"row":35,"column":0}},"lines":["  fixtures :all","","  # Returns true if a test user is logged in.","  def is_logged_in?","    !session[:user_id].nil?","  end","","  # Logs in a test user.","  def log_in_as(user, options = {})","    password    = options[:password]    || 'password'","    remember_me = options[:remember_me] || '1'","    if integration_test?","      post login_path, session: { email:       user.email,","                                  password:    password,","                                  remember_me: remember_me }","    else","      session[:user_id] = user.id","    end","  end","","  private","","    # Returns true inside an integration test.","    def integration_test?","      defined?(post_via_redirect)","    end"]},{"action":"insertText","range":{"start":{"row":35,"column":0},"end":{"row":35,"column":3}},"text":"end"}]}]]},"ace":{"folds":[],"scrolltop":45,"scrollleft":0,"selection":{"start":{"row":35,"column":3},"end":{"row":35,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":34,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1415162324533,"hash":"6ecfb1a63713ef2a7d35ce8f2d05c36f49ba4838"}